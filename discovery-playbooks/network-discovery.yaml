# Copyright (c) 2020 Cisco and/or its affiliates.
#
# This software is licensed to you under the terms of the Cisco Sample
# Code License, Version 1.1 (the "License"). You may obtain a copy of the
# License at
#
#                https://developer.cisco.com/docs/licenses
#
# All use of the material herein must be in accordance with the terms of
# the License. All rights not expressly granted by the License are
# reserved. Unless required by applicable law or agreed to separately in
# writing, software distributed under the License is distributed on an "AS
# IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied.

---
- name: Network Discovery (IOS)
  hosts: ios
  gather_facts: False
  tasks:
    - name: Gather facts
      ios_facts:
        gather_subset: all
        gather_network_resources: all

    - name: Backup Configuration
      ios_config:
        backup: yes
        backup_options:
          dir_path: "./output/configs/"
          filename: "{{ inventory_hostname }}.txt"
  
- name: Network Discovery (IOS-XR)
  hosts: iosxr
  gather_facts: False
  tasks:
    - name: Gather facts
      iosxr_facts:
        gather_subset: all
        gather_network_resources: all

    - name: Backup Configuration
      ios_config:
        backup: yes
        backup_options:
          dir_path: "./output/configs/"
          filename: "{{ inventory_hostname }}.txt"
        
- name: Network Discovery (NX-OS)
  hosts: nxos
  gather_facts: False
  tasks:
    - name: Gather facts
      nxos_facts:
        gather_subset: all
        gather_network_resources: all

    - name: Execute show mac address-table
      nxos_command:
        commands: show mac address-table
      register: show_mac_address_table_output

    - name: Create fact based on show mac address-table
      set_fact:
        net_mac_address_table: "{{ (show_mac_address_table_output.stdout[0] | parse_cli('./parsers/nxos/nxos_show_mac_address_table_parser.yaml')).macs }}"
      when: show_mac_address_table_output.stdout is defined

    - name: Create fact based on show mac address-table
      set_fact:
        net_mac_address_table: "{{ (show_mac_address_table_output.stdout[0] | parse_cli('./parsers/nxos/nxos_show_mac_address_table_parser.yaml')).macs }}"
      when: show_mac_address_table_output.stdout is defined

    - name: Execute show vrf
      nxos_command:
        commands: show vrf
      register: show_vrf_output

    - name: Create fact based on show vrf
      set_fact:
        net_vrf: "{{ (show_vrf_output.stdout[0] | parse_cli('./parsers/nxos/nxos_show_vrf_parser.yaml')).vrfs }}"
      when: show_vrf_output.stdout is defined

    - name: Execute show ip arp vrf
      nxos_command:
        commands: "show ip arp vrf {{ item.name }}"
      register: "show_ip_arp_vrf_output"
      with_items:
        - "{{ net_vrf }}"
        
    - name: Create fact based on show ip arp vrf
      set_fact:
        "net_arp_vrf_{{ item.item.name}}": "{{ (item.stdout[0] |Â parse_cli('./parsers/nxos/nxos_show_ip_arp_parser.yaml')).arp_entries }}"
      with_items:
        - "{{ show_ip_arp_vrf_output.results }}"

    - name: Execute show hsrp brief
      nxos_command:
        commands: "show hsrp brief"
      register: "show_hsrp_brief_output"
      ignore_errors: yes

    - name: Create fact based on show hsrp brief
      set_fact:
        net_hsrp: "{{ (show_hsrp_brief_output.stdout[0] | parse_cli('./parsers/nxos/nxos_show_hsrp_brief_parser.yaml')).hsrp_groups }}"
      when: show_hsrp_brief_output is defined

    - name: Backup Configuration
      ios_config:
        backup: yes
        backup_options:
          dir_path: "./output/configs/"
          filename: "{{ inventory_hostname }}.txt"

- name: Write discovered information to disk
  hosts: all
  gather_facts: False
  tasks:
    - name: Write Device Facts
      copy:
        content: |
          {{ hostvars | to_nice_json }}
        dest: ./output/discovery_results.json
      delegate_to: localhost