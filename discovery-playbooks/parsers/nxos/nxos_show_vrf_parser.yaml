# Copyright (c) 2020 Cisco and/or its affiliates.
#
# This software is licensed to you under the terms of the Cisco Sample
# Code License, Version 1.1 (the "License"). You may obtain a copy of the
# License at
#
#                https://developer.cisco.com/docs/licenses
#
# All use of the material herein must be in accordance with the terms of
# the License. All rights not expressly granted by the License are
# reserved. Unless required by applicable law or agreed to separately in
# writing, software distributed under the License is distributed on an "AS
# IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied.

---
# NXOS "show vrf" Parser
#
# Command:
# - show vrf
#
# Example Output:
#
#     SWITCH# show vrf
#     VRF-Name                           VRF-ID State   Reason
#     default                                 1 Up      --
#     management                              2 Up      --
#
# Example Playbook:
#
#    - name: Execute show vrf
#      nxos_command:
#        commands: show vrf
#      register: show_vrf_output
#    - name: Create fact based on show vrf
#      set_fact:
#        net_vrf: "{{ (vrf_output.stdout[0] | parse_cli('./parsers/nxos/nxos_show_vrf_parser.yaml')).vrfs }}"
#      when: show_vrf_output.stdout is defined
#
# Schema Output
#
# [device_name] => {
#    "ansible_facts": {
#        "net_vrf": [
#            {
#                "name": "default",
#                "vrf_id": "1",
#                "state": "Up",
#                "reason": "--"
#            }
#        ]
#    },

vars:
  vrf:
    name: "{{ item.name }}"
    vrf_id: "{{ item.vrf_id }}"
    state: "{{ item.state }}"
    reason: "{{ item.reason }}"

keys:
  vrfs:
    value: "{{ vrf }}"
    items: "^(?P<name>\\S+)\\s{3,}(?P<vrf_id>\\d+)\\s{1,}(?P<state>\\S+)\\s{3,}(?P<reason>\\S+)\\s*$"    

    