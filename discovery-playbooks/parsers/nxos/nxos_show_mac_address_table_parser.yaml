# Copyright (c) 2020 Cisco and/or its affiliates.
#
# This software is licensed to you under the terms of the Cisco Sample
# Code License, Version 1.1 (the "License"). You may obtain a copy of the
# License at
#
#                https://developer.cisco.com/docs/licenses
#
# All use of the material herein must be in accordance with the terms of
# the License. All rights not expressly granted by the License are
# reserved. Unless required by applicable law or agreed to separately in
# writing, software distributed under the License is distributed on an "AS
# IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied.

---
# NXOS "show mac address-table" Parser
#
# Command:
# - show mac address-table
#
# Example Output:
#
#     SWITCH# show mac address-table
#     Legend:
#             * - primary entry, G - Gateway MAC, (R) - Routed MAC, O - Overlay MAC
#             age - seconds since last seen,+ - primary entry using vPC Peer-Link,
#             (T) - True, (F) - False, C - ControlPlane MAC, ~ - vsan
#        VLAN     MAC Address      Type      age     Secure NTFY Ports
#     ---------+-----------------+--------+---------+------+----+------------------
#     * 2000     00fe.c886.3c3f   static   -         F      F    nve1(10.3.0.2)
#     * 2000     84b2.6143.b119   static   -         F      F    Vlan2000
#     * 2300     c08c.6031.7670   dynamic  0         F      F    Eth1/1
#     C 2300     c08c.6031.7672   dynamic  0         F      F    nve1(10.3.0.2)#
#
# Example Playbook:
#
#    - name: Execute show mac address-table
#      nxos_command:
#        commands: show mac address-table
#      register: show_mac_address_table_output
#    - name: Create fact based on show mac address-table
#      set_fact:
#        net_mac_address_table: "{{ (show_mac_address_table_output.stdout[0] | parse_cli('./parsers/nxos/nxos_show_mac_address_table_parser.yaml')).macs }}"
#      when: show_mac_address_table_output.stdout is defined
#
# Schema Output
#
# [device_name] => {
#    "ansible_facts": {
#        "net_mac_address_table": [
#            {
#                "legend": "*",
#                "vlan": "2000",
#                "mac_address": "84b2.6143.b119"
#                "type": "static"
#                "port": "Vlan2000"
#            }
#        ]
#    },

vars:
  mac:
    legend: "{{ item.legend }}"
    vlan: "{{ item.vlan }}"
    mac_address: "{{ item.mac_address }}"
    type: "{{ item.type }}"
    port: "{{ item.port }}"

keys:
  macs:
    value: "{{ mac }}"
    items: "^(?P<legend>.)\\s{1,}(?P<vlan>[\\d|-]+)\\s{3,}(?P<mac_address>\\S+)\\s{3,}(?P<type>\\S+).+\\s{3,}(?P<port>.+)\\s*$"

    